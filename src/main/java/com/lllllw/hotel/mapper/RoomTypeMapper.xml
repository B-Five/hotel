<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lllllw.hotel.dao.RoomTypeMapper">
	<resultMap id="BaseResultMap" type="com.lllllw.hotel.model.RoomType">
		<id column="t_id" jdbcType="INTEGER" property="tId" />
		<result column="t_name" jdbcType="VARCHAR" property="tName" />
		<result column="t_bed" jdbcType="VARCHAR" property="tBed" />
		<result column="t_member" jdbcType="INTEGER" property="tMember" />
		<result column="t_po" jdbcType="VARCHAR" property="tPo" />
		<result column="t_bath" jdbcType="VARCHAR" property="tBath" />
		<result column="t_remarks" jdbcType="VARCHAR" property="tRemarks" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		t_id, t_name, t_bed, t_member, t_po, t_bath, t_remarks
	</sql>
	<select id="selectByExample" parameterType="com.lllllw.hotel.model.RoomTypeExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'false' as QUERYID,
		<include refid="Base_Column_List" />
		from roomtype
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from roomtype
		where t_id = #{tId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from roomtype
		where t_id = #{tId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.lllllw.hotel.model.RoomTypeExample">
		delete from roomtype
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.lllllw.hotel.model.RoomType">
		insert into roomtype (t_id, t_name, t_bed,
		t_member, t_po, t_bath,
		t_remarks)
		values (#{tId,jdbcType=INTEGER}, #{tName,jdbcType=VARCHAR},
		#{tBed,jdbcType=VARCHAR},
		#{tMember,jdbcType=INTEGER}, #{tPo,jdbcType=VARCHAR}, #{tBath,jdbcType=VARCHAR},
		#{tRemarks,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.lllllw.hotel.model.RoomType">
		insert into roomtype
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="tId != null">
				t_id,
			</if>
			<if test="tName != null">
				t_name,
			</if>
			<if test="tBed != null">
				t_bed,
			</if>
			<if test="tMember != null">
				t_member,
			</if>
			<if test="tPo != null">
				t_po,
			</if>
			<if test="tBath != null">
				t_bath,
			</if>
			<if test="tRemarks != null">
				t_remarks,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="tId != null">
				#{tId,jdbcType=INTEGER},
			</if>
			<if test="tName != null">
				#{tName,jdbcType=VARCHAR},
			</if>
			<if test="tBed != null">
				#{tBed,jdbcType=VARCHAR},
			</if>
			<if test="tMember != null">
				#{tMember,jdbcType=INTEGER},
			</if>
			<if test="tPo != null">
				#{tPo,jdbcType=VARCHAR},
			</if>
			<if test="tBath != null">
				#{tBath,jdbcType=VARCHAR},
			</if>
			<if test="tRemarks != null">
				#{tRemarks,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.lllllw.hotel.model.RoomTypeExample"
		resultType="java.lang.Long">
		select count(*) from roomtype
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update roomtype
		<set>
			<if test="record.tId != null">
				t_id = #{record.tId,jdbcType=INTEGER},
			</if>
			<if test="record.tName != null">
				t_name = #{record.tName,jdbcType=VARCHAR},
			</if>
			<if test="record.tBed != null">
				t_bed = #{record.tBed,jdbcType=VARCHAR},
			</if>
			<if test="record.tMember != null">
				t_member = #{record.tMember,jdbcType=INTEGER},
			</if>
			<if test="record.tPo != null">
				t_po = #{record.tPo,jdbcType=VARCHAR},
			</if>
			<if test="record.tBath != null">
				t_bath = #{record.tBath,jdbcType=VARCHAR},
			</if>
			<if test="record.tRemarks != null">
				t_remarks = #{record.tRemarks,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update roomtype
		set t_id = #{record.tId,jdbcType=INTEGER},
		t_name = #{record.tName,jdbcType=VARCHAR},
		t_bed = #{record.tBed,jdbcType=VARCHAR},
		t_member = #{record.tMember,jdbcType=INTEGER},
		t_po = #{record.tPo,jdbcType=VARCHAR},
		t_bath = #{record.tBath,jdbcType=VARCHAR},
		t_remarks = #{record.tRemarks,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.lllllw.hotel.model.RoomType">
		update roomtype
		<set>
			<if test="tName != null">
				t_name = #{tName,jdbcType=VARCHAR},
			</if>
			<if test="tBed != null">
				t_bed = #{tBed,jdbcType=VARCHAR},
			</if>
			<if test="tMember != null">
				t_member = #{tMember,jdbcType=INTEGER},
			</if>
			<if test="tPo != null">
				t_po = #{tPo,jdbcType=VARCHAR},
			</if>
			<if test="tBath != null">
				t_bath = #{tBath,jdbcType=VARCHAR},
			</if>
			<if test="tRemarks != null">
				t_remarks = #{tRemarks,jdbcType=VARCHAR},
			</if>
		</set>
		where t_id = #{tId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.lllllw.hotel.model.RoomType">
		update roomtype
		set t_name = #{tName,jdbcType=VARCHAR},
		t_bed = #{tBed,jdbcType=VARCHAR},
		t_member = #{tMember,jdbcType=INTEGER},
		t_po = #{tPo,jdbcType=VARCHAR},
		t_bath = #{tBath,jdbcType=VARCHAR},
		t_remarks = #{tRemarks,jdbcType=VARCHAR}
		where t_id = #{tId,jdbcType=INTEGER}
	</update>
	<!-- 额外添加 -->
	<select id="selectByDate" resultMap="BaseResultMap">
		SELECT 
		<include refid="Base_Column_List" />
		FROM roomType WHERE t_id IN (
		SELECT r_type FROM room WHERE r_id NOT IN ( select o_rid FROM `order` WHERE o_checkinTime &lt;= #{start,jdbcType=DATE} AND o_checkoutTime &gt;= #{start,jdbcType=DATE} UNION
		SELECT o_rid FROM `order` WHERE o_checkinTime &lt;= #{end,jdbcType=DATE} AND o_checkoutTime &gt;=#{end,jdbcType=DATE} )GROUP BY r_type) AND t_member >= #{member,jdbcType=INTEGER}
	</select>
</mapper>